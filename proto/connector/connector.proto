syntax = "proto3";

package connector;

import "shared.proto";

service LnctlConnector {
  rpc GetStatus(GetStatusRequest) returns (GetStatusResponse) {}
  rpc StreamNodeEvents(StreamNodeEventsRequest) returns (stream NodeEvent) {}
}

message GetStatusRequest {}
message GetStatusResponse {
  string connector_id = 1;
  string monitored_node_id = 2;
  ConnectorType type = 3;
}
enum ConnectorType {
  LND = 0;
}

message StreamNodeEventsRequest { }
message NodeEvent {
  oneof event {
    LnGossip gossip = 1;
    MonitoredChannelUpdate channel_update = 2;
  }
}
message LnGossip {
  uint64 received_at = 1;
  oneof message {
    NodeAnnouncement node_announcement = 2;
    ChannelAnnouncement channel_announcement = 3;
    ChannelUpdate channel_update = 4;
  }
}
message NodeAnnouncement {
  uint32 timestamp = 1;
  string node_id = 2;
}
message ChannelAnnouncement {
  uint64 short_channel_id = 2;
  string node_a_id = 4;
  string node_b_id = 5;
}
message ChannelUpdate {
  uint32 timestamp = 1;
  uint64 short_channel_id = 2;
  Direction channel_direction = 3;
  bool channel_enabled = 4;
  uint32 cltv_expiry_delta = 5;
  uint64 htlc_minimum_msat = 6;
  optional uint64 htlc_maximum_msat = 7;
  uint32 fee_base_msat = 8;
  uint32 fee_proportional_millionths = 9;
}
enum Direction {
  A_TO_B = 0;
  B_TO_A = 1;
}

message MonitoredChannelUpdate {
  uint64 timestamp = 1;
  .shared.ChannelState channel_state = 2;
}
